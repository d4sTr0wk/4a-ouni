---------------------------------------------
PIC ASSEMBLER LISTING
Line    Address Opcode  Instruction
---------------------------------------------
0001    0000            ; Compiled with: PIC Simulator IDE v8.55
0002    0000            ; Microcontroller model: PIC16F877A
0003    0000            ; Clock frequency: 1.0MHz
0004    0000            ;
0005    0000            	R0L EQU 0x020
0006    0000            	R0H EQU 0x021
0007    0000            	R0HL EQU 0x020
0008    0000            	W_TEMP EQU 0x07F
0009    0000            	STATUS_TEMP EQU 0x07E
0010    0000            ;       The address of 'first_reg' (byte) (global) is 0x023
0011    0000            ;       The address of 'last_reg' (byte) (global) is 0x024
0012    0000            ;       The address of 'solution' (byte) (global) is 0x026
0013    0000            ;       The address of 'display' (byte) (global) is 0x022
0014    0000            ;       The address of 'flagrb' (bit) (global) is 0x025,0
0015    0000            	ORG 0x0000
0016    0000    118A    	BCF PCLATH,3
0017    0001    120A    	BCF PCLATH,4
0018    0002    280E    	GOTO L0003
0019    0003            	ORG 0x0004
0020    0004    00FF    	MOVWF W_TEMP
0021    0005    0E03    	SWAPF STATUS,W
0022    0006    0183    	CLRF STATUS
0023    0007    00FE    	MOVWF STATUS_TEMP
0024    0008    20BA    	CALL L0004
0025    0009    0E7E    	SWAPF STATUS_TEMP,W
0026    000A    0083    	MOVWF STATUS
0027    000B    0EFF    	SWAPF W_TEMP,F
0028    000C    0E7F    	SWAPF W_TEMP,W
0029    000D    0009    	RETFIE
0030    000E            ; User code start
0031    000E            L0003:
0032    000E            ; 1: Dim first_reg As Byte
0033    000E            ; 2: Dim last_reg As Byte
0034    000E            ; 3: Dim solution As Byte
0035    000E            ; 4: Dim display As Byte
0036    000E            ; 5: Dim flagrb As Bit
0037    000E            ; 6: flagrb = 0
0038    000E    1025    	BCF 0x025,0
0039    000F            ; 7: TRISB = 0x01
0040    000F    3001    	MOVLW 0x01
0041    0010    1683    	BSF STATUS,RP0
0042    0011    0086    	MOVWF TRISB
0043    0012            ; 8: OPTION_REG.T0CS = False
0044    0012    1281    	BCF OPTION_REG,5
0045    0013            ; 9: OPTION_REG.INTEDG = False  // External interrupt RB0/INT triggered on falling
0046    0013    1301    	BCF OPTION_REG,6
0047    0014    1283    	BCF STATUS,RP0
0048    0015            ; 10: INTCON.GIE = 1
0049    0015    178B    	BSF INTCON,7
0050    0016            ; 11: INTCON.PEIE = 0
0051    0016    130B    	BCF INTCON,6
0052    0017            ; 12: INTCON.TMR0IE = 0
0053    0017    128B    	BCF INTCON,5
0054    0018            ; 13: INTCON.INTE = 1
0055    0018    160B    	BSF INTCON,4
0056    0019            ; 14: INTCON.RBIE = 0
0057    0019    118B    	BCF INTCON,3
0058    001A            ; 15: INTCON.T0IF = 0
0059    001A    110B    	BCF INTCON,2
0060    001B            ; 16: INTCON.INTF = 0
0061    001B    108B    	BCF INTCON,1
0062    001C            ; 17: INTCON.RBIF = 0
0063    001C    100B    	BCF INTCON,0
0064    001D            ; 18: TRISC = 0
0065    001D    1683    	BSF STATUS,RP0
0066    001E    0187    	CLRF TRISC
0067    001F            ; 19: TRISD = 0
0068    001F    0188    	CLRF TRISD
0069    0020    1283    	BCF STATUS,RP0
0070    0021            ; 20: main:
0071    0021            L0001:
0072    0021            ; 21: If flagrb = 1 Then
0073    0021    1C25    	BTFSS 0x025,0
0074    0022    2848    	GOTO L0005
0075    0023            ; 22: last_reg = TMR0
0076    0023    0801    	MOVF TMR0,W
0077    0024    00A4    	MOVWF 0x024
0078    0025            ; 23: INTCON.GIE = 0
0079    0025    138B    	BCF INTCON,7
0080    0026            ; 24: If last_reg < first_reg Then
0081    0026    0823    	MOVF 0x023,W
0082    0027    0224    	SUBWF 0x024,W
0083    0028    1803    	BTFSC STATUS,C
0084    0029    2831    	GOTO L0006
0085    002A            ; 25: solution = (255 - first_reg) + (last_reg)
0086    002A            	oshonsoft_temp_b1 EQU 0x027
0087    002A    0823    	MOVF 0x023,W
0088    002B    3CFF    	SUBLW 0xFF
0089    002C    00A7    	MOVWF 0x027
0090    002D    0827    	MOVF 0x027,W
0091    002E    0724    	ADDWF 0x024,W
0092    002F    00A6    	MOVWF 0x026
0093    0030            ; 26: Else
0094    0030    2834    	GOTO L0007
0095    0031            L0006:
0096    0031            ; 27: solution = last_reg - first_reg
0097    0031    0823    	MOVF 0x023,W
0098    0032    0224    	SUBWF 0x024,W
0099    0033    00A6    	MOVWF 0x026
0100    0034            ; 28: Endif
0101    0034            L0007:
0102    0034            ; 29: flagrb = 0
0103    0034    1025    	BCF 0x025,0
0104    0035            ; 30: display = solution >> 4
0105    0035    0826    	MOVF 0x026,W
0106    0036    00A0    	MOVWF R0L
0107    0037    01A1    	CLRF R0H
0108    0038    3004    	MOVLW 0x04
0109    0039    20C8    	CALL SR00
0110    003A    0820    	MOVF R0L,W
0111    003B    00A2    	MOVWF 0x022
0112    003C            ; 31: Gosub calculadisplay
0113    003C    204A    	CALL L0002
0114    003D            ; 32: PORTC = display
0115    003D    0822    	MOVF 0x022,W
0116    003E    0087    	MOVWF PORTC
0117    003F            ; 33: display = solution And 0x0f
0118    003F    0826    	MOVF 0x026,W
0119    0040    00A0    	MOVWF R0L
0120    0041    300F    	MOVLW 0x0F
0121    0042    0520    	ANDWF R0L,W
0122    0043    00A2    	MOVWF 0x022
0123    0044            ; 34: Gosub calculadisplay
0124    0044    204A    	CALL L0002
0125    0045            ; 35: PORTD = display
0126    0045    0822    	MOVF 0x022,W
0127    0046    0088    	MOVWF PORTD
0128    0047            ; 36: INTCON.GIE = 1
0129    0047    178B    	BSF INTCON,7
0130    0048            ; 37: Endif
0131    0048            L0005:
0132    0048            ; 38: Goto main
0133    0048    2821    	GOTO L0001
0134    0049            ; 39: End
0135    0049    2849    L0008:	GOTO L0008
0136    004A            ; 40: calculadisplay:
0137    004A            L0002:
0138    004A            ; 41: Select Case display
0139    004A            ; 42: Case 0
0140    004A    0822    	MOVF 0x022,W
0141    004B    3C00    	SUBLW 0x00
0142    004C    1D03    	BTFSS STATUS,Z
0143    004D    2851    	GOTO L0009
0144    004E            ; 43: display = %00111111
0145    004E    303F    	MOVLW 0x3F
0146    004F    00A2    	MOVWF 0x022
0147    0050            ; 44: Case 1
0148    0050    28B9    	GOTO L0010
0149    0051            L0009:
0150    0051    0822    	MOVF 0x022,W
0151    0052    3C01    	SUBLW 0x01
0152    0053    1D03    	BTFSS STATUS,Z
0153    0054    2858    	GOTO L0011
0154    0055            ; 45: display = %00000110
0155    0055    3006    	MOVLW 0x06
0156    0056    00A2    	MOVWF 0x022
0157    0057            ; 46: Case 2
0158    0057    28B9    	GOTO L0012
0159    0058            L0011:
0160    0058    0822    	MOVF 0x022,W
0161    0059    3C02    	SUBLW 0x02
0162    005A    1D03    	BTFSS STATUS,Z
0163    005B    285F    	GOTO L0013
0164    005C            ; 47: display = %01011011
0165    005C    305B    	MOVLW 0x5B
0166    005D    00A2    	MOVWF 0x022
0167    005E            ; 48: Case 3
0168    005E    28B9    	GOTO L0014
0169    005F            L0013:
0170    005F    0822    	MOVF 0x022,W
0171    0060    3C03    	SUBLW 0x03
0172    0061    1D03    	BTFSS STATUS,Z
0173    0062    2866    	GOTO L0015
0174    0063            ; 49: display = %01001111
0175    0063    304F    	MOVLW 0x4F
0176    0064    00A2    	MOVWF 0x022
0177    0065            ; 50: Case 4
0178    0065    28B9    	GOTO L0016
0179    0066            L0015:
0180    0066    0822    	MOVF 0x022,W
0181    0067    3C04    	SUBLW 0x04
0182    0068    1D03    	BTFSS STATUS,Z
0183    0069    286D    	GOTO L0017
0184    006A            ; 51: display = %01100110
0185    006A    3066    	MOVLW 0x66
0186    006B    00A2    	MOVWF 0x022
0187    006C            ; 52: Case 5
0188    006C    28B9    	GOTO L0018
0189    006D            L0017:
0190    006D    0822    	MOVF 0x022,W
0191    006E    3C05    	SUBLW 0x05
0192    006F    1D03    	BTFSS STATUS,Z
0193    0070    2874    	GOTO L0019
0194    0071            ; 53: display = %01101101
0195    0071    306D    	MOVLW 0x6D
0196    0072    00A2    	MOVWF 0x022
0197    0073            ; 54: Case 6
0198    0073    28B9    	GOTO L0020
0199    0074            L0019:
0200    0074    0822    	MOVF 0x022,W
0201    0075    3C06    	SUBLW 0x06
0202    0076    1D03    	BTFSS STATUS,Z
0203    0077    287B    	GOTO L0021
0204    0078            ; 55: display = %01111101
0205    0078    307D    	MOVLW 0x7D
0206    0079    00A2    	MOVWF 0x022
0207    007A            ; 56: Case 7
0208    007A    28B9    	GOTO L0022
0209    007B            L0021:
0210    007B    0822    	MOVF 0x022,W
0211    007C    3C07    	SUBLW 0x07
0212    007D    1D03    	BTFSS STATUS,Z
0213    007E    2882    	GOTO L0023
0214    007F            ; 57: display = %00000111
0215    007F    3007    	MOVLW 0x07
0216    0080    00A2    	MOVWF 0x022
0217    0081            ; 58: Case 8
0218    0081    28B9    	GOTO L0024
0219    0082            L0023:
0220    0082    0822    	MOVF 0x022,W
0221    0083    3C08    	SUBLW 0x08
0222    0084    1D03    	BTFSS STATUS,Z
0223    0085    2889    	GOTO L0025
0224    0086            ; 59: display = %01111111
0225    0086    307F    	MOVLW 0x7F
0226    0087    00A2    	MOVWF 0x022
0227    0088            ; 60: Case 9
0228    0088    28B9    	GOTO L0026
0229    0089            L0025:
0230    0089    0822    	MOVF 0x022,W
0231    008A    3C09    	SUBLW 0x09
0232    008B    1D03    	BTFSS STATUS,Z
0233    008C    2890    	GOTO L0027
0234    008D            ; 61: display = %01100111
0235    008D    3067    	MOVLW 0x67
0236    008E    00A2    	MOVWF 0x022
0237    008F            ; 62: Case 10
0238    008F    28B9    	GOTO L0028
0239    0090            L0027:
0240    0090    0822    	MOVF 0x022,W
0241    0091    3C0A    	SUBLW 0x0A
0242    0092    1D03    	BTFSS STATUS,Z
0243    0093    2897    	GOTO L0029
0244    0094            ; 63: display = %01110111
0245    0094    3077    	MOVLW 0x77
0246    0095    00A2    	MOVWF 0x022
0247    0096            ; 64: Case 11
0248    0096    28B9    	GOTO L0030
0249    0097            L0029:
0250    0097    0822    	MOVF 0x022,W
0251    0098    3C0B    	SUBLW 0x0B
0252    0099    1D03    	BTFSS STATUS,Z
0253    009A    289E    	GOTO L0031
0254    009B            ; 65: display = %01111100
0255    009B    307C    	MOVLW 0x7C
0256    009C    00A2    	MOVWF 0x022
0257    009D            ; 66: Case 12
0258    009D    28B9    	GOTO L0032
0259    009E            L0031:
0260    009E    0822    	MOVF 0x022,W
0261    009F    3C0C    	SUBLW 0x0C
0262    00A0    1D03    	BTFSS STATUS,Z
0263    00A1    28A5    	GOTO L0033
0264    00A2            ; 67: display = %00111001
0265    00A2    3039    	MOVLW 0x39
0266    00A3    00A2    	MOVWF 0x022
0267    00A4            ; 68: Case 13
0268    00A4    28B9    	GOTO L0034
0269    00A5            L0033:
0270    00A5    0822    	MOVF 0x022,W
0271    00A6    3C0D    	SUBLW 0x0D
0272    00A7    1D03    	BTFSS STATUS,Z
0273    00A8    28AC    	GOTO L0035
0274    00A9            ; 69: display = %01011110
0275    00A9    305E    	MOVLW 0x5E
0276    00AA    00A2    	MOVWF 0x022
0277    00AB            ; 70: Case 14
0278    00AB    28B9    	GOTO L0036
0279    00AC            L0035:
0280    00AC    0822    	MOVF 0x022,W
0281    00AD    3C0E    	SUBLW 0x0E
0282    00AE    1D03    	BTFSS STATUS,Z
0283    00AF    28B3    	GOTO L0037
0284    00B0            ; 71: display = %01111001
0285    00B0    3079    	MOVLW 0x79
0286    00B1    00A2    	MOVWF 0x022
0287    00B2            ; 72: Case 15
0288    00B2    28B9    	GOTO L0038
0289    00B3            L0037:
0290    00B3    0822    	MOVF 0x022,W
0291    00B4    3C0F    	SUBLW 0x0F
0292    00B5    1D03    	BTFSS STATUS,Z
0293    00B6    28B9    	GOTO L0039
0294    00B7            ; 73: display = %01110001
0295    00B7    3071    	MOVLW 0x71
0296    00B8    00A2    	MOVWF 0x022
0297    00B9            ; 74: EndSelect
0298    00B9            L0039:
0299    00B9            L0038:
0300    00B9            L0036:
0301    00B9            L0034:
0302    00B9            L0032:
0303    00B9            L0030:
0304    00B9            L0028:
0305    00B9            L0026:
0306    00B9            L0024:
0307    00B9            L0022:
0308    00B9            L0020:
0309    00B9            L0018:
0310    00B9            L0016:
0311    00B9            L0014:
0312    00B9            L0012:
0313    00B9            L0010:
0314    00B9            ; 75: Return
0315    00B9    0008    	RETURN
0316    00BA            ; 76: On Interrupt
0317    00BA            L0004:
0318    00BA            ; 77: If INTCON.INTF = 1 Then
0319    00BA    1C8B    	BTFSS 0x00B,1
0320    00BB    28C1    	GOTO L0040
0321    00BC            ; 78: first_reg = TMR0
0322    00BC    0801    	MOVF TMR0,W
0323    00BD    00A3    	MOVWF 0x023
0324    00BE            ; 79: flagrb = 1
0325    00BE    1425    	BSF 0x025,0
0326    00BF            ; 80: INTCON.INTF = 0  // external interrupt cleared
0327    00BF    108B    	BCF INTCON,1
0328    00C0            ; 81: Else
0329    00C0    28C3    	GOTO L0041
0330    00C1            L0040:
0331    00C1            ; 82: INTCON = %10010000
0332    00C1    3090    	MOVLW 0x90
0333    00C2    008B    	MOVWF INTCON
0334    00C3            ; 83: Endif
0335    00C3            L0041:
0336    00C3            ; 84: Resume
0337    00C3    0008    	RETURN
0338    00C4            ; 85: 
0339    00C4            ; End of user code
0340    00C4    28C4    L0042:	GOTO L0042
0341    00C5            ;
0342    00C5            ;
0343    00C5            ;
0344    00C5            ;
0345    00C5            ; Word ShiftRight Routine
0346    00C5    1003    SR01:	BCF STATUS,C
0347    00C6    0CA1    	RRF R0H,F
0348    00C7    0CA0    	RRF R0L,F
0349    00C8    3EFF    SR00:	ADDLW 0xFF
0350    00C9    1803    	BTFSC STATUS,C
0351    00CA    28C5    	GOTO SR01
0352    00CB    0008    	RETURN
0353    00CC            ;
0354    00CC            ;
0355    00CC            ; End of listing
0356    00CC            	END
---------------------------------------------
Number of errors = 0
