---------------------------------------------
PIC ASSEMBLER LISTING
Line    Address Opcode  Instruction
---------------------------------------------
0001    0000            ; Compiled with: PIC Simulator IDE v8.55
0002    0000            ; Microcontroller model: PIC16F877A
0003    0000            ; Clock frequency: 1.0MHz
0004    0000            ;
0005    0000            	R0L EQU 0x020
0006    0000            	R0H EQU 0x021
0007    0000            	R1L EQU 0x022
0008    0000            	R1H EQU 0x023
0009    0000            	R2L EQU 0x024
0010    0000            	R2H EQU 0x025
0011    0000            	R3L EQU 0x026
0012    0000            	R0HL EQU 0x020
0013    0000            	R1HL EQU 0x022
0014    0000            	R2HL EQU 0x024
0015    0000            	R1HL0HL EQU 0x020
0016    0000            	W_TEMP EQU 0x07F
0017    0000            	STATUS_TEMP EQU 0x07E
0018    0000            ;       The address of 'first_reg' (byte) (global) is 0x028
0019    0000            ;       The address of 'last_reg' (byte) (global) is 0x029
0020    0000            ;       The address of 'solution' (byte) (global) is 0x02B
0021    0000            ;       The address of 'display' (byte) (global) is 0x027
0022    0000            ;       The address of 'flagrb' (bit) (global) is 0x02A,0
0023    0000            	ORG 0x0000
0024    0000    118A    	BCF PCLATH,3
0025    0001    120A    	BCF PCLATH,4
0026    0002    280E    	GOTO L0003
0027    0003            	ORG 0x0004
0028    0004    00FF    	MOVWF W_TEMP
0029    0005    0E03    	SWAPF STATUS,W
0030    0006    0183    	CLRF STATUS
0031    0007    00FE    	MOVWF STATUS_TEMP
0032    0008    20C0    	CALL L0004
0033    0009    0E7E    	SWAPF STATUS_TEMP,W
0034    000A    0083    	MOVWF STATUS
0035    000B    0EFF    	SWAPF W_TEMP,F
0036    000C    0E7F    	SWAPF W_TEMP,W
0037    000D    0009    	RETFIE
0038    000E            ; User code start
0039    000E            L0003:
0040    000E            ; 1: Dim first_reg As Byte
0041    000E            ; 2: Dim last_reg As Byte
0042    000E            ; 3: Dim solution As Byte
0043    000E            ; 4: Dim display As Byte
0044    000E            ; 5: Dim flagrb As Bit
0045    000E            ; 6: flagrb = 0
0046    000E    102A    	BCF 0x02A,0
0047    000F            ; 7: TRISB = 0x01
0048    000F    3001    	MOVLW 0x01
0049    0010    1683    	BSF STATUS,RP0
0050    0011    0086    	MOVWF TRISB
0051    0012            ; 8: OPTION_REG.T0CS = False
0052    0012    1281    	BCF OPTION_REG,5
0053    0013            ; 9: OPTION_REG.INTEDG = False  // External interrupt RB0/INT triggered on falling
0054    0013    1301    	BCF OPTION_REG,6
0055    0014    1283    	BCF STATUS,RP0
0056    0015            ; 10: INTCON.GIE = 1
0057    0015    178B    	BSF INTCON,7
0058    0016            ; 11: INTCON.PEIE = 0
0059    0016    130B    	BCF INTCON,6
0060    0017            ; 12: INTCON.TMR0IE = 1
0061    0017    168B    	BSF INTCON,5
0062    0018            ; 13: INTCON.INTE = 1
0063    0018    160B    	BSF INTCON,4
0064    0019            ; 14: INTCON.RBIE = 0
0065    0019    118B    	BCF INTCON,3
0066    001A            ; 15: INTCON.T0IF = 0
0067    001A    110B    	BCF INTCON,2
0068    001B            ; 16: INTCON.INTF = 0
0069    001B    108B    	BCF INTCON,1
0070    001C            ; 17: INTCON.RBIF = 0
0071    001C    100B    	BCF INTCON,0
0072    001D            ; 18: TRISC = 0
0073    001D    1683    	BSF STATUS,RP0
0074    001E    0187    	CLRF TRISC
0075    001F            ; 19: TRISD = 0
0076    001F    0188    	CLRF TRISD
0077    0020    1283    	BCF STATUS,RP0
0078    0021            ; 20: main:
0079    0021            L0001:
0080    0021            ; 21: If flagrb = 1 Then
0081    0021    1C2A    	BTFSS 0x02A,0
0082    0022    284E    	GOTO L0005
0083    0023            ; 22: last_reg = TMR0
0084    0023    0801    	MOVF TMR0,W
0085    0024    00A9    	MOVWF 0x029
0086    0025            ; 23: INTCON.GIE = 0
0087    0025    138B    	BCF INTCON,7
0088    0026            ; 24: If last_reg < first_reg Then
0089    0026    0828    	MOVF 0x028,W
0090    0027    0229    	SUBWF 0x029,W
0091    0028    1803    	BTFSC STATUS,C
0092    0029    2831    	GOTO L0006
0093    002A            ; 25: solution = (255 - first_reg) + (last_reg)
0094    002A            	oshonsoft_temp_b1 EQU 0x02C
0095    002A    0828    	MOVF 0x028,W
0096    002B    3CFF    	SUBLW 0xFF
0097    002C    00AC    	MOVWF 0x02C
0098    002D    082C    	MOVF 0x02C,W
0099    002E    0729    	ADDWF 0x029,W
0100    002F    00AB    	MOVWF 0x02B
0101    0030            ; 26: Else
0102    0030    2834    	GOTO L0007
0103    0031            L0006:
0104    0031            ; 27: solution = last_reg - first_reg
0105    0031    0828    	MOVF 0x028,W
0106    0032    0229    	SUBWF 0x029,W
0107    0033    00AB    	MOVWF 0x02B
0108    0034            ; 28: Endif
0109    0034            L0007:
0110    0034            ; 29: flagrb = 0
0111    0034    102A    	BCF 0x02A,0
0112    0035            ; 30: display = solution / 16
0113    0035    082B    	MOVF 0x02B,W
0114    0036    00A0    	MOVWF R0L
0115    0037    01A1    	CLRF R0H
0116    0038    3010    	MOVLW 0x10
0117    0039    00A2    	MOVWF R1L
0118    003A    01A3    	CLRF R1H
0119    003B    20C8    	CALL D001
0120    003C    0820    	MOVF R0L,W
0121    003D    00A7    	MOVWF 0x027
0122    003E            ; 31: Gosub calculadisplay
0123    003E    2050    	CALL L0002
0124    003F            ; 32: PORTC = display
0125    003F    0827    	MOVF 0x027,W
0126    0040    0087    	MOVWF PORTC
0127    0041            ; 33: display = solution Mod 16
0128    0041    082B    	MOVF 0x02B,W
0129    0042    00A0    	MOVWF R0L
0130    0043    01A1    	CLRF R0H
0131    0044    3010    	MOVLW 0x10
0132    0045    00A2    	MOVWF R1L
0133    0046    01A3    	CLRF R1H
0134    0047    20C8    	CALL D001
0135    0048    0824    	MOVF R2L,W
0136    0049    00A7    	MOVWF 0x027
0137    004A            ; 34: Gosub calculadisplay
0138    004A    2050    	CALL L0002
0139    004B            ; 35: PORTD = display
0140    004B    0827    	MOVF 0x027,W
0141    004C    0088    	MOVWF PORTD
0142    004D            ; 36: INTCON.GIE = 1
0143    004D    178B    	BSF INTCON,7
0144    004E            ; 37: Endif
0145    004E            L0005:
0146    004E            ; 38: Goto main
0147    004E    2821    	GOTO L0001
0148    004F            ; 39: End
0149    004F    284F    L0008:	GOTO L0008
0150    0050            ; 40: calculadisplay:
0151    0050            L0002:
0152    0050            ; 41: Select Case display
0153    0050            ; 42: Case 0
0154    0050    0827    	MOVF 0x027,W
0155    0051    3C00    	SUBLW 0x00
0156    0052    1D03    	BTFSS STATUS,Z
0157    0053    2857    	GOTO L0009
0158    0054            ; 43: display = %00111111
0159    0054    303F    	MOVLW 0x3F
0160    0055    00A7    	MOVWF 0x027
0161    0056            ; 44: Case 1
0162    0056    28BF    	GOTO L0010
0163    0057            L0009:
0164    0057    0827    	MOVF 0x027,W
0165    0058    3C01    	SUBLW 0x01
0166    0059    1D03    	BTFSS STATUS,Z
0167    005A    285E    	GOTO L0011
0168    005B            ; 45: display = %00000110
0169    005B    3006    	MOVLW 0x06
0170    005C    00A7    	MOVWF 0x027
0171    005D            ; 46: Case 2
0172    005D    28BF    	GOTO L0012
0173    005E            L0011:
0174    005E    0827    	MOVF 0x027,W
0175    005F    3C02    	SUBLW 0x02
0176    0060    1D03    	BTFSS STATUS,Z
0177    0061    2865    	GOTO L0013
0178    0062            ; 47: display = %01011011
0179    0062    305B    	MOVLW 0x5B
0180    0063    00A7    	MOVWF 0x027
0181    0064            ; 48: Case 3
0182    0064    28BF    	GOTO L0014
0183    0065            L0013:
0184    0065    0827    	MOVF 0x027,W
0185    0066    3C03    	SUBLW 0x03
0186    0067    1D03    	BTFSS STATUS,Z
0187    0068    286C    	GOTO L0015
0188    0069            ; 49: display = %01001111
0189    0069    304F    	MOVLW 0x4F
0190    006A    00A7    	MOVWF 0x027
0191    006B            ; 50: Case 4
0192    006B    28BF    	GOTO L0016
0193    006C            L0015:
0194    006C    0827    	MOVF 0x027,W
0195    006D    3C04    	SUBLW 0x04
0196    006E    1D03    	BTFSS STATUS,Z
0197    006F    2873    	GOTO L0017
0198    0070            ; 51: display = %01100110
0199    0070    3066    	MOVLW 0x66
0200    0071    00A7    	MOVWF 0x027
0201    0072            ; 52: Case 5
0202    0072    28BF    	GOTO L0018
0203    0073            L0017:
0204    0073    0827    	MOVF 0x027,W
0205    0074    3C05    	SUBLW 0x05
0206    0075    1D03    	BTFSS STATUS,Z
0207    0076    287A    	GOTO L0019
0208    0077            ; 53: display = %01101101
0209    0077    306D    	MOVLW 0x6D
0210    0078    00A7    	MOVWF 0x027
0211    0079            ; 54: Case 6
0212    0079    28BF    	GOTO L0020
0213    007A            L0019:
0214    007A    0827    	MOVF 0x027,W
0215    007B    3C06    	SUBLW 0x06
0216    007C    1D03    	BTFSS STATUS,Z
0217    007D    2881    	GOTO L0021
0218    007E            ; 55: display = %01111101
0219    007E    307D    	MOVLW 0x7D
0220    007F    00A7    	MOVWF 0x027
0221    0080            ; 56: Case 7
0222    0080    28BF    	GOTO L0022
0223    0081            L0021:
0224    0081    0827    	MOVF 0x027,W
0225    0082    3C07    	SUBLW 0x07
0226    0083    1D03    	BTFSS STATUS,Z
0227    0084    2888    	GOTO L0023
0228    0085            ; 57: display = %00000111
0229    0085    3007    	MOVLW 0x07
0230    0086    00A7    	MOVWF 0x027
0231    0087            ; 58: Case 8
0232    0087    28BF    	GOTO L0024
0233    0088            L0023:
0234    0088    0827    	MOVF 0x027,W
0235    0089    3C08    	SUBLW 0x08
0236    008A    1D03    	BTFSS STATUS,Z
0237    008B    288F    	GOTO L0025
0238    008C            ; 59: display = %01111111
0239    008C    307F    	MOVLW 0x7F
0240    008D    00A7    	MOVWF 0x027
0241    008E            ; 60: Case 9
0242    008E    28BF    	GOTO L0026
0243    008F            L0025:
0244    008F    0827    	MOVF 0x027,W
0245    0090    3C09    	SUBLW 0x09
0246    0091    1D03    	BTFSS STATUS,Z
0247    0092    2896    	GOTO L0027
0248    0093            ; 61: display = %01100111
0249    0093    3067    	MOVLW 0x67
0250    0094    00A7    	MOVWF 0x027
0251    0095            ; 62: Case 10
0252    0095    28BF    	GOTO L0028
0253    0096            L0027:
0254    0096    0827    	MOVF 0x027,W
0255    0097    3C0A    	SUBLW 0x0A
0256    0098    1D03    	BTFSS STATUS,Z
0257    0099    289D    	GOTO L0029
0258    009A            ; 63: display = %01110111
0259    009A    3077    	MOVLW 0x77
0260    009B    00A7    	MOVWF 0x027
0261    009C            ; 64: Case 11
0262    009C    28BF    	GOTO L0030
0263    009D            L0029:
0264    009D    0827    	MOVF 0x027,W
0265    009E    3C0B    	SUBLW 0x0B
0266    009F    1D03    	BTFSS STATUS,Z
0267    00A0    28A4    	GOTO L0031
0268    00A1            ; 65: display = %01111100
0269    00A1    307C    	MOVLW 0x7C
0270    00A2    00A7    	MOVWF 0x027
0271    00A3            ; 66: Case 12
0272    00A3    28BF    	GOTO L0032
0273    00A4            L0031:
0274    00A4    0827    	MOVF 0x027,W
0275    00A5    3C0C    	SUBLW 0x0C
0276    00A6    1D03    	BTFSS STATUS,Z
0277    00A7    28AB    	GOTO L0033
0278    00A8            ; 67: display = %00111001
0279    00A8    3039    	MOVLW 0x39
0280    00A9    00A7    	MOVWF 0x027
0281    00AA            ; 68: Case 13
0282    00AA    28BF    	GOTO L0034
0283    00AB            L0033:
0284    00AB    0827    	MOVF 0x027,W
0285    00AC    3C0D    	SUBLW 0x0D
0286    00AD    1D03    	BTFSS STATUS,Z
0287    00AE    28B2    	GOTO L0035
0288    00AF            ; 69: display = %01011110
0289    00AF    305E    	MOVLW 0x5E
0290    00B0    00A7    	MOVWF 0x027
0291    00B1            ; 70: Case 14
0292    00B1    28BF    	GOTO L0036
0293    00B2            L0035:
0294    00B2    0827    	MOVF 0x027,W
0295    00B3    3C0E    	SUBLW 0x0E
0296    00B4    1D03    	BTFSS STATUS,Z
0297    00B5    28B9    	GOTO L0037
0298    00B6            ; 71: display = %01111001
0299    00B6    3079    	MOVLW 0x79
0300    00B7    00A7    	MOVWF 0x027
0301    00B8            ; 72: Case 15
0302    00B8    28BF    	GOTO L0038
0303    00B9            L0037:
0304    00B9    0827    	MOVF 0x027,W
0305    00BA    3C0F    	SUBLW 0x0F
0306    00BB    1D03    	BTFSS STATUS,Z
0307    00BC    28BF    	GOTO L0039
0308    00BD            ; 73: display = %01110001
0309    00BD    3071    	MOVLW 0x71
0310    00BE    00A7    	MOVWF 0x027
0311    00BF            ; 74: EndSelect
0312    00BF            L0039:
0313    00BF            L0038:
0314    00BF            L0036:
0315    00BF            L0034:
0316    00BF            L0032:
0317    00BF            L0030:
0318    00BF            L0028:
0319    00BF            L0026:
0320    00BF            L0024:
0321    00BF            L0022:
0322    00BF            L0020:
0323    00BF            L0018:
0324    00BF            L0016:
0325    00BF            L0014:
0326    00BF            L0012:
0327    00BF            L0010:
0328    00BF            ; 75: Return
0329    00BF    0008    	RETURN
0330    00C0            ; 76: On Interrupt
0331    00C0            L0004:
0332    00C0            ; 77: If INTCON.INTF = 1 Then
0333    00C0    1C8B    	BTFSS 0x00B,1
0334    00C1    28C6    	GOTO L0040
0335    00C2            ; 78: first_reg = TMR0
0336    00C2    0801    	MOVF TMR0,W
0337    00C3    00A8    	MOVWF 0x028
0338    00C4            ; 79: flagrb = 1
0339    00C4    142A    	BSF 0x02A,0
0340    00C5            ; 80: INTCON.INTF = 0  // external interrupt cleared
0341    00C5    108B    	BCF INTCON,1
0342    00C6            ; 81: Endif
0343    00C6            L0040:
0344    00C6            ; 82: Resume
0345    00C6    0008    	RETURN
0346    00C7            ; 83: 
0347    00C7            ; End of user code
0348    00C7    28C7    L0041:	GOTO L0041
0349    00C8            ;
0350    00C8            ;
0351    00C8            ;
0352    00C8            ;
0353    00C8            ; Word Division Routine
0354    00C8    3010    D001:	MOVLW 0x10
0355    00C9    00A6    	MOVWF R3L
0356    00CA    01A5    	CLRF R2H
0357    00CB    01A4    	CLRF R2L
0358    00CC    0D21    D002:	RLF R0H,W
0359    00CD    0DA4    	RLF R2L,F
0360    00CE    0DA5    	RLF R2H,F
0361    00CF    0822    	MOVF R1L,W
0362    00D0    02A4    	SUBWF R2L,F
0363    00D1    0823    	MOVF R1H,W
0364    00D2    1C03    	BTFSS STATUS,C
0365    00D3    0F23    	INCFSZ R1H,W
0366    00D4    02A5    	SUBWF R2H,F
0367    00D5    1803    	BTFSC STATUS,C
0368    00D6    28DE    	GOTO D003
0369    00D7    0822    	MOVF R1L,W
0370    00D8    07A4    	ADDWF R2L,F
0371    00D9    0823    	MOVF R1H,W
0372    00DA    1803    	BTFSC STATUS,C
0373    00DB    0F23    	INCFSZ R1H,W
0374    00DC    07A5    	ADDWF R2H,F
0375    00DD    1003    	BCF STATUS,C
0376    00DE    0DA0    D003:	RLF R0L,F
0377    00DF    0DA1    	RLF R0H,F
0378    00E0    0BA6    	DECFSZ R3L,F
0379    00E1    28CC    	GOTO D002
0380    00E2    0008    	RETURN
0381    00E3            ;
0382    00E3            ;
0383    00E3            ; End of listing
0384    00E3            	END
---------------------------------------------
Number of errors = 0
